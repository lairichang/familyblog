/**
 * EasyUI for jQuery 1.5.4.2
 * 
 * Copyright (c) 2009-2018 www.jeasyui.com. All rights reserved.
 *
 * Licensed under the freeware license: http://www.jeasyui.com/license_freeware.php
 * To use it on other terms please contact us: info@jeasyui.com
 *
 */
(function ($) {
    $.easyui = {
        indexOfArray: function (a, o, id) {
            for (var i = 0, _1 = a.length; i < _1; i++) {
                if (id == undefined) {
                    if (a[i] == o) {
                        return i;
                    }
                } else {
                    if (a[i][o] == id) {
                        return i;
                    }
                }
            }
            return -1;
        }, removeArrayItem: function (a, o, id) {
            if (typeof o == "string") {
                for (var i = 0, _2 = a.length; i < _2; i++) {
                    if (a[i][o] == id) {
                        a.splice(i, 1);
                        return;
                    }
                }
            } else {
                var _3 = this.indexOfArray(a, o);
                if (_3 != -1) {
                    a.splice(_3, 1);
                }
            }
        }, addArrayItem: function (a, o, r) {
            var _4 = this.indexOfArray(a, o, r ? r[o] : undefined);
            if (_4 == -1) {
                a.push(r ? r : o);
            } else {
                a[_4] = r ? r : o;
            }
        }, getArrayItem: function (a, o, id) {
            var _5 = this.indexOfArray(a, o, id);
            return _5 == -1 ? null : a[_5];
        }, forEach: function (_6, _7, _8) {
            var _9 = [];
            for (var i = 0; i < _6.length; i++) {
                _9.push(_6[i]);
            }
            while (_9.length) {
                var _a = _9.shift();
                if (_8(_a) == false) {
                    return;
                }
                if (_7 && _a.children) {
                    for (var i = _a.children.length - 1; i >= 0; i--) {
                        _9.unshift(_a.children[i]);
                    }
                }
            }
        }
    };
    $.parser = {
        auto: true, onComplete: function (_b) {
        }, plugins: ["draggable", "droppable", "resizable", "pagination", "tooltip", "linkbutton", "menu", "menubutton", "splitbutton", "switchbutton", "progressbar", "tree", "textbox", "passwordbox", "filebox", "combo", "combobox", "combotree", "combogrid", "combotreegrid", "tagbox", "numberbox", "validatebox", "searchbox", "spinner", "numberspinner", "timespinner", "datetimespinner", "calendar", "datebox", "datetimebox", "slider", "layout", "panel", "datagrid", "propertygrid", "treegrid", "datalist", "tabs", "accordion", "window", "dialog", "form"], parse: function (_c) {
            var aa = [];
            for (var i = 0; i < $.parser.plugins.length; i++) {
                var _d = $.parser.plugins[i];
                var r = $(".easyui-" + _d, _c);
                if (r.length) {
                    if (r[_d]) {
                        r.each(function () {
                            $(this)[_d]($.data(this, "options") || {});
                        });
                    } else {
                        aa.push({ name: _d, jq: r });
                    }
                }
            }
            if (aa.length && window.easyloader) {
                var _e = [];
                for (var i = 0; i < aa.length; i++) {
                    _e.push(aa[i].name);
                }
                easyloader.load(_e, function () {
                    for (var i = 0; i < aa.length; i++) {
                        var _f = aa[i].name;
                        var jq = aa[i].jq;
                        jq.each(function () {
                            $(this)[_f]($.data(this, "options") || {});
                        });
                    }
                    $.parser.onComplete.call($.parser, _c);
                });
            } else {
                $.parser.onComplete.call($.parser, _c);
            }
        }, parseValue: function (_10, _11, _12, _13) {
            _13 = _13 || 0;
            var v = $.trim(String(_11 || ""));
            var _14 = v.substr(v.length - 1, 1);
            if (_14 == "%") {
                v = parseFloat(v.substr(0, v.length - 1));
                if (_10.toLowerCase().indexOf("width") >= 0) {
                    v = Math.floor((_12.width() - _13) * v / 100);
                } else {
                    v = Math.floor((_12.height() - _13) * v / 100);
                }
            } else {
                v = parseInt(v) || undefined;
            }
            return v;
        }, parseOptions: function (_15, _16) {
            var t = $(_15);
            var _17 = {};
            var s = $.trim(t.attr("data-options"));
            if (s) {
                if (s.substring(0, 1) != "{") {
                    s = "{" + s + "}";
                }
                _17 = (new Function("return " + s))();
            }
            $.map(["width", "height", "left", "top", "minWidth", "maxWidth", "minHeight", "maxHeight"], function (p) {
                var pv = $.trim(_15.style[p] || "");
                if (pv) {
                    if (pv.indexOf("%") == -1) {
                        pv = parseInt(pv);
                        if (isNaN(pv)) {
                            pv = undefined;
                        }
                    }
                    _17[p] = pv;
                }
            });
            if (_16) {
                var _18 = {};
                for (var i = 0; i < _16.length; i++) {
                    var pp = _16[i];
                    if (typeof pp == "string") {
                        _18[pp] = t.attr(pp);
                    } else {
                        for (var _19 in pp) {
                            var _1a = pp[_19];
                            if (_1a == "boolean") {
                                _18[_19] = t.attr(_19) ? (t.attr(_19) == "true") : undefined;
                            } else {
                                if (_1a == "number") {
                                    _18[_19] = t.attr(_19) == "0" ? 0 : parseFloat(t.attr(_19)) || undefined;
                                }
                            }
                        }
                    }
                }
                $.extend(_17, _18);
            }
            return _17;
        }
    };
    $(function () {
        var d = $("<div style=\"position:absolute;top:-1000px;width:100px;height:100px;padding:5px\"></div>").appendTo("body");
        $._boxModel = d.outerWidth() != 100;
        d.remove();
        d = $("<div style=\"position:fixed\"></div>").appendTo("body");
        $._positionFixed = (d.css("position") == "fixed");
        d.remove();
        if (!window.easyloader && $.parser.auto) {
            $.parser.parse();
        }
    });
    $.fn._outerWidth = function (_1b) {
        if (_1b == undefined) {
            if (this[0] == window) {
                return this.width() || document.body.clientWidth;
            }
            return this.outerWidth() || 0;
        }
        return this._size("width", _1b);
    };
    $.fn._outerHeight = function (_1c) {
        if (_1c == undefined) {
            if (this[0] == window) {
                return this.height() || document.body.clientHeight;
            }
            return this.outerHeight() || 0;
        }
        return this._size("height", _1c);
    };
    $.fn._scrollLeft = function (_1d) {
        if (_1d == undefined) {
            return this.scrollLeft();
        } else {
            return this.each(function () {
                $(this).scrollLeft(_1d);
            });
        }
    };
    $.fn._propAttr = $.fn.prop || $.fn.attr;
    $.fn._size = function (_1e, _1f) {
        if (typeof _1e == "string") {
            if (_1e == "clear") {
                return this.each(function () {
                    $(this).css({ width: "", minWidth: "", maxWidth: "", height: "", minHeight: "", maxHeight: "" });
                });
            } else {
                if (_1e == "fit") {
                    return this.each(function () {
                        _20(this, this.tagName == "BODY" ? $("body") : $(this).parent(), true);
                    });
                } else {
                    if (_1e == "unfit") {
                        return this.each(function () {
                            _20(this, $(this).parent(), false);
                        });
                    } else {
                        if (_1f == undefined) {
                            return _21(this[0], _1e);
                        } else {
                            return this.each(function () {
                                _21(this, _1e, _1f);
                            });
                        }
                    }
                }
            }
        } else {
            return this.each(function () {
                _1f = _1f || $(this).parent();
                $.extend(_1e, _20(this, _1f, _1e.fit) || {});
                var r1 = _22(this, "width", _1f, _1e);
                var r2 = _22(this, "height", _1f, _1e);
                if (r1 || r2) {
                    $(this).addClass("easyui-fluid");
                } else {
                    $(this).removeClass("easyui-fluid");
                }
            });
        }
        function _20(_23, _24, fit) {
            if (!_24.length) {
                return false;
            }
            var t = $(_23)[0];
            var p = _24[0];
            var _25 = p.fcount || 0;
            if (fit) {
                if (!t.fitted) {
                    t.fitted = true;
                    p.fcount = _25 + 1;
                    $(p).addClass("panel-noscroll");
                    if (p.tagName == "BODY") {
                        $("html").addClass("panel-fit");
                    }
                }
                return { width: ($(p).width() || 1), height: ($(p).height() || 1) };
            } else {
                if (t.fitted) {
                    t.fitted = false;
                    p.fcount = _25 - 1;
                    if (p.fcount == 0) {
                        $(p).removeClass("panel-noscroll");
                        if (p.tagName == "BODY") {
                            $("html").removeClass("panel-fit");
                        }
                    }
                }
                return false;
            }
        };
        function _22(_26, _27, _28, _29) {
            var t = $(_26);
            var p = _27;
            var p1 = p.substr(0, 1).toUpperCase() + p.substr(1);
            var min = $.parser.parseValue("min" + p1, _29["min" + p1], _28);
            var max = $.parser.parseValue("max" + p1, _29["max" + p1], _28);
            var val = $.parser.parseValue(p, _29[p], _28);
            var _2a = (String(_29[p] || "").indexOf("%") >= 0 ? true : false);
            if (!isNaN(val)) {
                var v = Math.min(Math.max(val, min || 0), max || 99999);
                if (!_2a) {
                    _29[p] = v;
                }
                t._size("min" + p1, "");
                t._size("max" + p1, "");
                t._size(p, v);
            } else {
                t._size(p, "");
                t._size("min" + p1, min);
                t._size("max" + p1, max);
            }
            return _2a || _29.fit;
        };
        function _21(_2b, _2c, _2d) {
            var t = $(_2b);
            if (_2d == undefined) {
                _2d = parseInt(_2b.style[_2c]);
                if (isNaN(_2d)) {
                    return undefined;
                }
                if ($._boxModel) {
                    _2d += _2e();
                }
                return _2d;
            } else {
                if (_2d === "") {
                    t.css(_2c, "");
                } else {
                    if ($._boxModel) {
                        _2d -= _2e();
                        if (_2d < 0) {
                            _2d = 0;
                        }
                    }
                    t.css(_2c, _2d + "px");
                }
            }
            function _2e() {
                if (_2c.toLowerCase().indexOf("width") >= 0) {
                    return t.outerWidth() - t.width();
                } else {
                    return t.outerHeight() - t.height();
                }
            };
        };
    };
})(jQuery);
(function ($) {
    var _2f = null;
    var _30 = null;
    var _31 = false;
    function _32(e) {
        if (e.touches.length != 1) {
            return;
        }
        if (!_31) {
            _31 = true;
            dblClickTimer = setTimeout(function () {
                _31 = false;
            }, 500);
        } else {
            clearTimeout(dblClickTimer);
            _31 = false;
            _33(e, "dblclick");
        }
        _2f = setTimeout(function () {
            _33(e, "contextmenu", 3);
        }, 1000);
        _33(e, "mousedown");
        if ($.fn.draggable.isDragging || $.fn.resizable.isResizing) {
            e.preventDefault();
        }
    };
    function _34(e) {
        if (e.touches.length != 1) {
            return;
        }
        if (_2f) {
            clearTimeout(_2f);
        }
        _33(e, "mousemove");
        if ($.fn.draggable.isDragging || $.fn.resizable.isResizing) {
            e.preventDefault();
        }
    };
    function _35(e) {
        if (_2f) {
            clearTimeout(_2f);
        }
        _33(e, "mouseup");
        if ($.fn.draggable.isDragging || $.fn.resizable.isResizing) {
            e.preventDefault();
        }
    };
    function _33(e, _36, _37) {
        var _38 = new $.Event(_36);
        _38.pageX = e.changedTouches[0].pageX;
        _38.pageY = e.changedTouches[0].pageY;
        _38.which = _37 || 1;
        $(e.target).trigger(_38);
    };
    if (document.addEventListener) {
        document.addEventListener("touchstart", _32, true);
        document.addEventListener("touchmove", _34, true);
        document.addEventListener("touchend", _35, true);
    }
})(jQuery);




(function ($) {
    $.fn._remove = function () {
        return this.each(function () {
            $(this).remove();
            try {
                this.outerHTML = "";
            }
            catch (err) {
            }
        });
    };
    function _211(node) {
        node._remove();
    };
    function _212(_213, _214) {
        var _215 = $.data(_213, "panel");
        var opts = _215.options;
        var _216 = _215.panel;
        var _217 = _216.children(".panel-header");
        var _218 = _216.children(".panel-body");
        var _219 = _216.children(".panel-footer");
        var _21a = (opts.halign == "left" || opts.halign == "right");
        if (_214) {
            $.extend(opts, { width: _214.width, height: _214.height, minWidth: _214.minWidth, maxWidth: _214.maxWidth, minHeight: _214.minHeight, maxHeight: _214.maxHeight, left: _214.left, top: _214.top });
            opts.hasResized = false;
        }
        var _21b = _216.outerWidth();
        var _21c = _216.outerHeight();
        _216._size(opts);
        var _21d = _216.outerWidth();
        var _21e = _216.outerHeight();
        if (opts.hasResized && (_21b == _21d && _21c == _21e)) {
            return;
        }
        opts.hasResized = true;
        if (!_21a) {
            _217._outerWidth(_216.width());
        }
        _218._outerWidth(_216.width());
        if (!isNaN(parseInt(opts.height))) {
            if (_21a) {
                if (opts.header) {
                    var _21f = $(opts.header)._outerWidth();
                } else {
                    _217.css("width", "");
                    var _21f = _217._outerWidth();
                }
                var _220 = _217.find(".panel-title");
                _21f += Math.min(_220._outerWidth(), _220._outerHeight());
                var _221 = _216.height();
                _217._outerWidth(_21f)._outerHeight(_221);
                _220._outerWidth(_217.height());
                _218._outerWidth(_216.width() - _21f - _219._outerWidth())._outerHeight(_221);
                _219._outerHeight(_221);
                _218.css({ left: "", right: "" }).css(opts.halign, (_217.position()[opts.halign] + _21f) + "px");
                opts.panelCssWidth = _216.css("width");
                if (opts.collapsed) {
                    _216._outerWidth(_21f + _219._outerWidth());
                }
            } else {
                _218._outerHeight(_216.height() - _217._outerHeight() - _219._outerHeight());
            }
        } else {
            _218.css("height", "");
            var min = $.parser.parseValue("minHeight", opts.minHeight, _216.parent());
            var max = $.parser.parseValue("maxHeight", opts.maxHeight, _216.parent());
            var _222 = _217._outerHeight() + _219._outerHeight() + _216._outerHeight() - _216.height();
            _218._size("minHeight", min ? (min - _222) : "");
            _218._size("maxHeight", max ? (max - _222) : "");
        }
        _216.css({ height: (_21a ? undefined : ""), minHeight: "", maxHeight: "", left: opts.left, top: opts.top });
        opts.onResize.apply(_213, [opts.width, opts.height]);
        $(_213).panel("doLayout");
    };
    function _223(_224, _225) {
        var _226 = $.data(_224, "panel");
        var opts = _226.options;
        var _227 = _226.panel;
        if (_225) {
            if (_225.left != null) {
                opts.left = _225.left;
            }
            if (_225.top != null) {
                opts.top = _225.top;
            }
        }
        _227.css({ left: opts.left, top: opts.top });
        _227.find(".tooltip-f").each(function () {
            $(this).tooltip("reposition");
        });
        opts.onMove.apply(_224, [opts.left, opts.top]);
    };
    function _228(_229) {
        $(_229).addClass("panel-body")._size("clear");
        var _22a = $("<div class=\"panel\"></div>").insertBefore(_229);
        _22a[0].appendChild(_229);
        _22a.bind("_resize", function (e, _22b) {
            if ($(this).hasClass("easyui-fluid") || _22b) {
                _212(_229, {});
            }
            return false;
        });
        return _22a;
    };
    function _22c(_22d) {
        var _22e = $.data(_22d, "panel");
        var opts = _22e.options;
        var _22f = _22e.panel;
        _22f.css(opts.style);
        _22f.addClass(opts.cls);
        _22f.removeClass("panel-hleft panel-hright").addClass("panel-h" + opts.halign);
        _230();
        _231();
        var _232 = $(_22d).panel("header");
        var body = $(_22d).panel("body");
        var _233 = $(_22d).siblings(".panel-footer");
        if (opts.border) {
            _232.removeClass("panel-header-noborder");
            body.removeClass("panel-body-noborder");
            _233.removeClass("panel-footer-noborder");
        } else {
            _232.addClass("panel-header-noborder");
            body.addClass("panel-body-noborder");
            _233.addClass("panel-footer-noborder");
        }
        _232.addClass(opts.headerCls);
        body.addClass(opts.bodyCls);
        $(_22d).attr("id", opts.id || "");
        if (opts.content) {
            $(_22d).panel("clear");
            $(_22d).html(opts.content);
            $.parser.parse($(_22d));
        }
        function _230() {
            if (opts.noheader || (!opts.title && !opts.header)) {
                _211(_22f.children(".panel-header"));
                _22f.children(".panel-body").addClass("panel-body-noheader");
            } else {
                if (opts.header) {
                    $(opts.header).addClass("panel-header").prependTo(_22f);
                } else {
                    var _234 = _22f.children(".panel-header");
                    if (!_234.length) {
                        _234 = $("<div class=\"panel-header\"></div>").prependTo(_22f);
                    }
                    if (!$.isArray(opts.tools)) {
                        _234.find("div.panel-tool .panel-tool-a").appendTo(opts.tools);
                    }
                    _234.empty();
                    var _235 = $("<div class=\"panel-title\"></div>").html(opts.title).appendTo(_234);
                    if (opts.iconCls) {
                        _235.addClass("panel-with-icon");
                        $("<div class=\"panel-icon\"></div>").addClass(opts.iconCls).appendTo(_234);
                    }
                    if (opts.halign == "left" || opts.halign == "right") {
                        _235.addClass("panel-title-" + opts.titleDirection);
                    }
                    var tool = $("<div class=\"panel-tool\"></div>").appendTo(_234);
                    tool.bind("click", function (e) {
                        e.stopPropagation();
                    });
                    if (opts.tools) {
                        if ($.isArray(opts.tools)) {
                            $.map(opts.tools, function (t) {
                                _236(tool, t.iconCls, eval(t.handler));
                            });
                        } else {
                            $(opts.tools).children().each(function () {
                                $(this).addClass($(this).attr("iconCls")).addClass("panel-tool-a").appendTo(tool);
                            });
                        }
                    }
                    if (opts.collapsible) {
                        _236(tool, "panel-tool-collapse", function () {
                            if (opts.collapsed == true) {
                                _257(_22d, true);
                            } else {
                                _248(_22d, true);
                            }
                        });
                    }
                    if (opts.minimizable) {
                        _236(tool, "panel-tool-min", function () {
                            _25d(_22d);
                        });
                    }
                    if (opts.maximizable) {
                        _236(tool, "panel-tool-max", function () {
                            if (opts.maximized == true) {
                                _260(_22d);
                            } else {
                                _247(_22d);
                            }
                        });
                    }
                    if (opts.closable) {
                        _236(tool, "panel-tool-close", function () {
                            _249(_22d);
                        });
                    }
                }
                _22f.children("div.panel-body").removeClass("panel-body-noheader");
            }
        };
        function _236(c, icon, _237) {
            var a = $("<a href=\"javascript:;\"></a>").addClass(icon).appendTo(c);
            a.bind("click", _237);
        };
        function _231() {
            if (opts.footer) {
                $(opts.footer).addClass("panel-footer").appendTo(_22f);
                $(_22d).addClass("panel-body-nobottom");
            } else {
                _22f.children(".panel-footer").remove();
                $(_22d).removeClass("panel-body-nobottom");
            }
        };
    };
    function _238(_239, _23a) {
        var _23b = $.data(_239, "panel");
        var opts = _23b.options;
        if (_23c) {
            opts.queryParams = _23a;
        }
        if (!opts.href) {
            return;
        }
        if (!_23b.isLoaded || !opts.cache) {
            var _23c = $.extend({}, opts.queryParams);
            if (opts.onBeforeLoad.call(_239, _23c) == false) {
                return;
            }
            _23b.isLoaded = false;
            if (opts.loadingMessage) {
                $(_239).panel("clear");
                $(_239).html($("<div class=\"panel-loading\"></div>").html(opts.loadingMessage));
            }
            opts.loader.call(_239, _23c, function (data) {
                var _23d = opts.extractor.call(_239, data);
                $(_239).panel("clear");
                $(_239).html(_23d);
                $.parser.parse($(_239));
                opts.onLoad.apply(_239, arguments);
                _23b.isLoaded = true;
            }, function () {
                opts.onLoadError.apply(_239, arguments);
            });
        }
    };
    function _23e(_23f) {
        var t = $(_23f);
        t.find(".combo-f").each(function () {
            $(this).combo("destroy");
        });
        t.find(".m-btn").each(function () {
            $(this).menubutton("destroy");
        });
        t.find(".s-btn").each(function () {
            $(this).splitbutton("destroy");
        });
        t.find(".tooltip-f").each(function () {
            $(this).tooltip("destroy");
        });
        t.children("div").each(function () {
            $(this)._size("unfit");
        });
        t.empty();
    };
    function _240(_241) {
        $(_241).panel("doLayout", true);
    };
    function _242(_243, _244) {
        var _245 = $.data(_243, "panel");
        var opts = _245.options;
        var _246 = _245.panel;
        if (_244 != true) {
            if (opts.onBeforeOpen.call(_243) == false) {
                return;
            }
        }
        _246.stop(true, true);
        if ($.isFunction(opts.openAnimation)) {
            opts.openAnimation.call(_243, cb);
        } else {
            switch (opts.openAnimation) {
                case "slide":
                    _246.slideDown(opts.openDuration, cb);
                    break;
                case "fade":
                    _246.fadeIn(opts.openDuration, cb);
                    break;
                case "show":
                    _246.show(opts.openDuration, cb);
                    break;
                default:
                    _246.show();
                    cb();
            }
        }
        function cb() {
            opts.closed = false;
            opts.minimized = false;
            var tool = _246.children(".panel-header").find("a.panel-tool-restore");
            if (tool.length) {
                opts.maximized = true;
            }
            opts.onOpen.call(_243);
            if (opts.maximized == true) {
                opts.maximized = false;
                _247(_243);
            }
            if (opts.collapsed == true) {
                opts.collapsed = false;
                _248(_243);
            }
            if (!opts.collapsed) {
                if (opts.href && (!_245.isLoaded || !opts.cache)) {
                    _238(_243);
                    _240(_243);
                    opts.doneLayout = true;
                }
            }
            if (!opts.doneLayout) {
                opts.doneLayout = true;
                _240(_243);
            }
        };
    };
    function _249(_24a, _24b) {
        var _24c = $.data(_24a, "panel");
        var opts = _24c.options;
        var _24d = _24c.panel;
        if (_24b != true) {
            if (opts.onBeforeClose.call(_24a) == false) {
                return;
            }
        }
        _24d.find(".tooltip-f").each(function () {
            $(this).tooltip("hide");
        });
        _24d.stop(true, true);
        _24d._size("unfit");
        if ($.isFunction(opts.closeAnimation)) {
            opts.closeAnimation.call(_24a, cb);
        } else {
            switch (opts.closeAnimation) {
                case "slide":
                    _24d.slideUp(opts.closeDuration, cb);
                    break;
                case "fade":
                    _24d.fadeOut(opts.closeDuration, cb);
                    break;
                case "hide":
                    _24d.hide(opts.closeDuration, cb);
                    break;
                default:
                    _24d.hide();
                    cb();
            }
        }
        function cb() {
            opts.closed = true;
            opts.onClose.call(_24a);
        };
    };
    function _24e(_24f, _250) {
        var _251 = $.data(_24f, "panel");
        var opts = _251.options;
        var _252 = _251.panel;
        if (_250 != true) {
            if (opts.onBeforeDestroy.call(_24f) == false) {
                return;
            }
        }
        $(_24f).panel("clear").panel("clear", "footer");
        _211(_252);
        opts.onDestroy.call(_24f);
    };
    function _248(_253, _254) {
        var opts = $.data(_253, "panel").options;
        var _255 = $.data(_253, "panel").panel;
        var body = _255.children(".panel-body");
        var _256 = _255.children(".panel-header");
        var tool = _256.find("a.panel-tool-collapse");
        if (opts.collapsed == true) {
            return;
        }
        body.stop(true, true);
        if (opts.onBeforeCollapse.call(_253) == false) {
            return;
        }
        tool.addClass("panel-tool-expand");
        if (_254 == true) {
            if (opts.halign == "left" || opts.halign == "right") {
                _255.animate({ width: _256._outerWidth() + _255.children(".panel-footer")._outerWidth() }, function () {
                    cb();
                });
            } else {
                body.slideUp("normal", function () {
                    cb();
                });
            }
        } else {
            if (opts.halign == "left" || opts.halign == "right") {
                _255._outerWidth(_256._outerWidth() + _255.children(".panel-footer")._outerWidth());
            }
            cb();
        }
        function cb() {
            body.hide();
            opts.collapsed = true;
            opts.onCollapse.call(_253);
        };
    };
    function _257(_258, _259) {
        var opts = $.data(_258, "panel").options;
        var _25a = $.data(_258, "panel").panel;
        var body = _25a.children(".panel-body");
        var tool = _25a.children(".panel-header").find("a.panel-tool-collapse");
        if (opts.collapsed == false) {
            return;
        }
        body.stop(true, true);
        if (opts.onBeforeExpand.call(_258) == false) {
            return;
        }
        tool.removeClass("panel-tool-expand");
        if (_259 == true) {
            if (opts.halign == "left" || opts.halign == "right") {
                body.show();
                _25a.animate({ width: opts.panelCssWidth }, function () {
                    cb();
                });
            } else {
                body.slideDown("normal", function () {
                    cb();
                });
            }
        } else {
            if (opts.halign == "left" || opts.halign == "right") {
                _25a.css("width", opts.panelCssWidth);
            }
            cb();
        }
        function cb() {
            body.show();
            opts.collapsed = false;
            opts.onExpand.call(_258);
            _238(_258);
            _240(_258);
        };
    };
    function _247(_25b) {
        var opts = $.data(_25b, "panel").options;
        var _25c = $.data(_25b, "panel").panel;
        var tool = _25c.children(".panel-header").find("a.panel-tool-max");
        if (opts.maximized == true) {
            return;
        }
        tool.addClass("panel-tool-restore");
        if (!$.data(_25b, "panel").original) {
            $.data(_25b, "panel").original = { width: opts.width, height: opts.height, left: opts.left, top: opts.top, fit: opts.fit };
        }
        opts.left = 0;
        opts.top = 0;
        opts.fit = true;
        _212(_25b);
        opts.minimized = false;
        opts.maximized = true;
        opts.onMaximize.call(_25b);
    };
    function _25d(_25e) {
        var opts = $.data(_25e, "panel").options;
        var _25f = $.data(_25e, "panel").panel;
        _25f._size("unfit");
        _25f.hide();
        opts.minimized = true;
        opts.maximized = false;
        opts.onMinimize.call(_25e);
    };
    function _260(_261) {
        var opts = $.data(_261, "panel").options;
        var _262 = $.data(_261, "panel").panel;
        var tool = _262.children(".panel-header").find("a.panel-tool-max");
        if (opts.maximized == false) {
            return;
        }
        _262.show();
        tool.removeClass("panel-tool-restore");
        $.extend(opts, $.data(_261, "panel").original);
        _212(_261);
        opts.minimized = false;
        opts.maximized = false;
        $.data(_261, "panel").original = null;
        opts.onRestore.call(_261);
    };
    function _263(_264, _265) {
        $.data(_264, "panel").options.title = _265;
        $(_264).panel("header").find("div.panel-title").html(_265);
    };
    var _266 = null;
    $(window).unbind(".panel").bind("resize.panel", function () {
        if (_266) {
            clearTimeout(_266);
        }
        _266 = setTimeout(function () {
            var _267 = $("body.layout");
            if (_267.length) {
                _267.layout("resize");
                $("body").children(".easyui-fluid:visible").each(function () {
                    $(this).triggerHandler("_resize");
                });
            } else {
                $("body").panel("doLayout");
            }
            _266 = null;
        }, 100);
    });
    $.fn.panel = function (_268, _269) {
        if (typeof _268 == "string") {
            return $.fn.panel.methods[_268](this, _269);
        }
        _268 = _268 || {};
        return this.each(function () {
            var _26a = $.data(this, "panel");
            var opts;
            if (_26a) {
                opts = $.extend(_26a.options, _268);
                _26a.isLoaded = false;
            } else {
                opts = $.extend({}, $.fn.panel.defaults, $.fn.panel.parseOptions(this), _268);
                $(this).attr("title", "");
                _26a = $.data(this, "panel", { options: opts, panel: _228(this), isLoaded: false });
            }
            _22c(this);
            $(this).show();
            if (opts.doSize == true) {
                _26a.panel.css("display", "block");
                _212(this);
            }
            if (opts.closed == true || opts.minimized == true) {
                _26a.panel.hide();
            } else {
                _242(this);
            }
        });
    };
    $.fn.panel.methods = {
        options: function (jq) {
            return $.data(jq[0], "panel").options;
        }, panel: function (jq) {
            return $.data(jq[0], "panel").panel;
        }, header: function (jq) {
            return $.data(jq[0], "panel").panel.children(".panel-header");
        }, footer: function (jq) {
            return jq.panel("panel").children(".panel-footer");
        }, body: function (jq) {
            return $.data(jq[0], "panel").panel.children(".panel-body");
        }, setTitle: function (jq, _26b) {
            return jq.each(function () {
                _263(this, _26b);
            });
        }, open: function (jq, _26c) {
            return jq.each(function () {
                _242(this, _26c);
            });
        }, close: function (jq, _26d) {
            return jq.each(function () {
                _249(this, _26d);
            });
        }, destroy: function (jq, _26e) {
            return jq.each(function () {
                _24e(this, _26e);
            });
        }, clear: function (jq, type) {
            return jq.each(function () {
                _23e(type == "footer" ? $(this).panel("footer") : this);
            });
        }, refresh: function (jq, href) {
            return jq.each(function () {
                var _26f = $.data(this, "panel");
                _26f.isLoaded = false;
                if (href) {
                    if (typeof href == "string") {
                        _26f.options.href = href;
                    } else {
                        _26f.options.queryParams = href;
                    }
                }
                _238(this);
            });
        }, resize: function (jq, _270) {
            return jq.each(function () {
                _212(this, _270 || {});
            });
        }, doLayout: function (jq, all) {
            return jq.each(function () {
                _271(this, "body");
                _271($(this).siblings(".panel-footer")[0], "footer");
                function _271(_272, type) {
                    if (!_272) {
                        return;
                    }
                    var _273 = _272 == $("body")[0];
                    var s = $(_272).find("div.panel:visible,div.accordion:visible,div.tabs-container:visible,div.layout:visible,.easyui-fluid:visible").filter(function (_274, el) {
                        var p = $(el).parents(".panel-" + type + ":first");
                        return _273 ? p.length == 0 : p[0] == _272;
                    });
                    s.each(function () {
                        $(this).triggerHandler("_resize", [all || false]);
                    });
                };
            });
        }, move: function (jq, _275) {
            return jq.each(function () {
                _223(this, _275);
            });
        }, maximize: function (jq) {
            return jq.each(function () {
                _247(this);
            });
        }, minimize: function (jq) {
            return jq.each(function () {
                _25d(this);
            });
        }, restore: function (jq) {
            return jq.each(function () {
                _260(this);
            });
        }, collapse: function (jq, _276) {
            return jq.each(function () {
                _248(this, _276);
            });
        }, expand: function (jq, _277) {
            return jq.each(function () {
                _257(this, _277);
            });
        }
    };
    $.fn.panel.parseOptions = function (_278) {
        var t = $(_278);
        var hh = t.children(".panel-header,header");
        var ff = t.children(".panel-footer,footer");
        return $.extend({}, $.parser.parseOptions(_278, ["id", "width", "height", "left", "top", "title", "iconCls", "cls", "headerCls", "bodyCls", "tools", "href", "method", "header", "footer", "halign", "titleDirection", { cache: "boolean", fit: "boolean", border: "boolean", noheader: "boolean" }, { collapsible: "boolean", minimizable: "boolean", maximizable: "boolean" }, { closable: "boolean", collapsed: "boolean", minimized: "boolean", maximized: "boolean", closed: "boolean" }, "openAnimation", "closeAnimation", { openDuration: "number", closeDuration: "number" },]), { loadingMessage: (t.attr("loadingMessage") != undefined ? t.attr("loadingMessage") : undefined), header: (hh.length ? hh.removeClass("panel-header") : undefined), footer: (ff.length ? ff.removeClass("panel-footer") : undefined) });
    };
    $.fn.panel.defaults = {
        id: null, title: null, iconCls: null, width: "auto", height: "auto", left: null, top: null, cls: null, headerCls: null, bodyCls: null, style: {}, href: null, cache: true, fit: false, border: true, doSize: true, noheader: false, content: null, halign: "top", titleDirection: "down", collapsible: false, minimizable: false, maximizable: false, closable: false, collapsed: false, minimized: false, maximized: false, closed: false, openAnimation: false, openDuration: 400, closeAnimation: false, closeDuration: 400, tools: null, footer: null, header: null, queryParams: {}, method: "get", href: null, loadingMessage: "Loading...", loader: function (_279, _27a, _27b) {
            var opts = $(this).panel("options");
            if (!opts.href) {
                return false;
            }
            $.ajax({
                type: opts.method, url: opts.href, cache: false, data: _279, dataType: "html", success: function (data) {
                    _27a(data);
                }, error: function () {
                    _27b.apply(this, arguments);
                }
            });
        }, extractor: function (data) {
            var _27c = /<body[^>]*>((.|[\n\r])*)<\/body>/im;
            var _27d = _27c.exec(data);
            if (_27d) {
                return _27d[1];
            } else {
                return data;
            }
        }, onBeforeLoad: function (_27e) {
        }, onLoad: function () {
        }, onLoadError: function () {
        }, onBeforeOpen: function () {
        }, onOpen: function () {
        }, onBeforeClose: function () {
        }, onClose: function () {
        }, onBeforeDestroy: function () {
        }, onDestroy: function () {
        }, onResize: function (_27f, _280) {
        }, onMove: function (left, top) {
        }, onMaximize: function () {
        }, onRestore: function () {
        }, onMinimize: function () {
        }, onBeforeCollapse: function () {
        }, onBeforeExpand: function () {
        }, onCollapse: function () {
        }, onExpand: function () {
        }
    };
})(jQuery);

